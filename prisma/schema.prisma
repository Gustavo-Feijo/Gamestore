datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  Accounts      Account[]
  Sessions      Session[]
  Reviews       Review[]
  Sales         Sales[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Game {
  id          String        @id @default(cuid())
  price       Float
  name        String
  description String
  image       String
  releaseDate DateTime
  storage     Int
  Categories  Categories[]
  Reviews     Review[]
  Developer   Developer     @relation(fields: [developerId], references: [id])
  developerId String
  SaleProduct SaleProduct[]
}

model Categories {
  id    String @id @default(cuid())
  name  String
  Games Game[]
}

model Developer {
  id    String @id @default(cuid())
  name  String
  Games Game[]
}

model Review {
  id     String @id @default(cuid())
  title  String
  review String
  score  Float
  Game   Game   @relation(fields: [gameId], references: [id])
  gameId String
  User   User   @relation(fields: [userId], references: [id])
  userId String
}

model Sales {
  id       String        @id @default(cuid())
  products SaleProduct[]
  User     User?         @relation(fields: [userId], references: [id])
  userId   String?
}

model SaleProduct {
  game    Game   @relation(fields: [gameId], references: [id])
  gameId  String
  amount  Int
  Sales   Sales  @relation(fields: [salesId], references: [id])
  salesId String

  @@id([salesId, gameId])
}
